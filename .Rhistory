groupPadding = 3,
groupnameFontsize = 10 ,
showTicks = FALSE,
margin=150,
tooltipGroupConnector = "    &#x25B6;    ",
chordedgeColor = "#B3B6B7"
)
chord
bps2evt2 <- read_csv("bps2evt2.csv")
bps2evtMatrix<-as.matrix(as_adjacency_matrix(as_tbl_graph(bps2evt2),attr = "acres"))
bps2evtMatrix = subset(bps2evtMatrix, select = -c(1,2,3,4,5,6))
bps2evtMatrix2 <- bps2evtMatrix[-c(7,8,9,10,11,12),]
groupColors <- c("#F26223", "#6c9174", "#957244", "#F26223", "#204a3e", "#97abad")
chord<-chorddiag(data = bps2evtMatrix2,
type = "bipartite",
groupColors = groupColors,
groupnamePadding = 10,
groupPadding = 3,
groupnameFontsize = 10 ,
showTicks = FALSE,
margin=150,
tooltipGroupConnector = "    &#x25B6;    ",
chordedgeColor = "#B3B6B7"
)
chord
links <- read_csv("mh_plantations2.csv")
nodes <- data.frame(
name=c(as.character(links$source),
as.character(links$target)) %>% unique()
)
nodes <- data.frame(
name=c(as.character(links$source),
as.character(links$target)) %>% unique()
)
links$IDsource <- match(links$source, nodes$name)-1
links$IDtarget <- match(links$target, nodes$name)-1
# Make the Network
p <- sankeyNetwork(Links = links,
Nodes = nodes,
Source = "IDsource",
Target = "IDtarget",
Value = "value",
NodeID = "name",
sinksRight=FALSE,
fontSize = 14)
p
links <- read_csv("mh_plantations2.csv")
nodes <- data.frame(
name=c(as.character(links$source),
as.character(links$target)) %>% unique()
)
nodes <- data.frame(
name=c(as.character(links$source),
as.character(links$target)) %>% unique()
)
links$IDsource <- match(links$source, nodes$name)-1
links$IDtarget <- match(links$target, nodes$name)-1
# Make the Network
p <- sankeyNetwork(Links = links,
Nodes = nodes,
Source = "IDsource",
Target = "IDtarget",
Value = "value",
NodeID = "name",
sinksRight=FALSE,
fontSize = 14)
p
sizingPolicy(viewer.suppress = TRUE,
knitr.figure = FALSE,
browser.fill = TRUE,
browser.padding = 75,
knitr.defaultWidth = 800,
knitr.defaultHeight = 500)
links <- read_csv("mh_plantations2.csv")
nodes <- data.frame(
name=c(as.character(links$source),
as.character(links$target)) %>% unique()
)
nodes <- data.frame(
name=c(as.character(links$source),
as.character(links$target)) %>% unique()
)
links$IDsource <- match(links$source, nodes$name)-1
links$IDtarget <- match(links$target, nodes$name)-1
# Make the Network
p <- sankeyNetwork(Links = links,
Nodes = nodes,
Source = "IDsource",
Target = "IDtarget",
Value = "value",
NodeID = "name",
sinksRight=FALSE,
fontSize = 14)
p
sizingPolicy(viewer.suppress = TRUE,
knitr.figure = FALSE,
browser.fill = TRUE,
browser.padding = 75,
knitr.defaultWidth = 800,
knitr.defaultHeight = 500)
links <- read_csv("mh_plantations2.csv")
nodes <- data.frame(
name=c(as.character(links$source),
as.character(links$target)) %>% unique()
)
nodes <- data.frame(
name=c(as.character(links$source),
as.character(links$target)) %>% unique()
)
links$IDsource <- match(links$source, nodes$name)-1
links$IDtarget <- match(links$target, nodes$name)-1
# Make the Network
p <- sankeyNetwork(Links = links,
Nodes = nodes,
Source = "IDsource",
Target = "IDtarget",
Value = "value",
NodeID = "name",
sinksRight=FALSE,
fontSize = 14)
p
htmlwidgets::onRender()
links <- read_csv("mh_plantations2.csv")
nodes <- data.frame(
name=c(as.character(links$source),
as.character(links$target)) %>% unique()
)
nodes <- data.frame(
name=c(as.character(links$source),
as.character(links$target)) %>% unique()
)
links$IDsource <- match(links$source, nodes$name)-1
links$IDtarget <- match(links$target, nodes$name)-1
# Make the Network
p <- sankeyNetwork(Links = links,
Nodes = nodes,
Source = "IDsource",
Target = "IDtarget",
Value = "value",
NodeID = "name",
sinksRight=FALSE,
fontSize = 14)
p
links <- read_csv("mh_plantations2.csv")
nodes <- data.frame(
name=c(as.character(links$source),
as.character(links$target)) %>% unique()
)
nodes <- data.frame(
name=c(as.character(links$source),
as.character(links$target)) %>% unique()
)
links$IDsource <- match(links$source, nodes$name)-1
links$IDtarget <- match(links$target, nodes$name)-1
# Make the Network
p <- sankeyNetwork(Links = links,
Nodes = nodes,
Source = "IDsource",
Target = "IDtarget",
Value = "value",
NodeID = "name",
sinksRight=FALSE,
fontSize = 14)
htmlwidgets::onRender(p)
install.packages(circlepackR)
devtools::install_github("jeromefroe/circlepackeR")
data <- data.frame(
root=rep("root", 15),
group=c(rep("group A",5), rep("group B",5), rep("group C",5)),
subgroup= rep(letters[1:5], each=3),
subsubgroup=rep(letters[1:3], 5),
value=sample(seq(1:15), 15)
)
View(data)
View(data)
install.packages("data.tree")
library(data.tree)
data$pathString <- paste("world", data$group, data$subgroup, data$subsubgroup, sep = "/")
population <- as.Node(data)
library(data.tree)
data$pathString <- paste("world", data$group, data$subgroup, data$subsubgroup, sep = "/")
population <- as.Node(data)
View(data)
library(data.tree)
data$pathString <- paste("world", data$group, data$subgroup, data$subsubgroup, sep = "/")
population <- as.Node(data)
p <- circlepackeR(population, size = "value", color_min = "hsl(56,80%,80%)", color_max = "hsl(341,30%,40%)")
p
pC <- circlepackeR(population, size = "value", color_min = "hsl(56,80%,80%)", color_max = "hsl(341,30%,40%)")
library(circlepackeR)
pC <- circlepackeR(population, size = "value", color_min = "hsl(56,80%,80%)", color_max = "hsl(341,30%,40%)")
pC
circle <- read_csv("circle.csv")
circle <- read_csv("circle.csv")
View(circle)
View(circle)
library(data.tree)
circle$pathString <- paste("world", circle$group, circle$subgroup, sep = "/")
population <- as.Node(circle)
mh_circle <- circlepackeR(population, size = "value", color_min = "hsl(56,80%,80%)", color_max = "hsl(341,30%,40%)")
mh_circle
circle <- read_csv("circle.csv")
library(data.tree)
circle$pathString <- paste("world", circle$group, circle$subgroup, sep = "/")
population <- as.Node(circle)
mh_circle <- circlepackeR(population, size = "value", color_min = "hsl(56,80%,80%)", color_max = "hsl(341,30%,40%)")
mh_circle
circle <- read_csv("circle.csv")
library(data.tree)
circle$pathString <- paste("world", circle$group, circle$subgroup, sep = "/")
population <- as.Node(circle)
mh_circle <- circlepackeR(population, size = "value", color_min = "hsl(56,80%,80%)", color_max = "hsl(341,30%,40%)")
mh_circle
circle <- read_csv("circle.csv")
library(circlepackeR)
library(data.tree)
circle$pathString <- paste("world", circle$group, circle$subgroup, sep = "/")
population <- as.Node(circle)
mh_circle <- circlepackeR(population, size = "value", color_min = "hsl(56,80%,80%)", color_max = "hsl(341,30%,40%)")
mh_circle
library(networkD3)
library(dplyr)
sizingPolicy(viewer.suppress = TRUE,
knitr.figure = FALSE,
browser.fill = TRUE,
browser.padding = 75,
knitr.defaultWidth = 800,
knitr.defaultHeight = 500)
links <- read_csv("mh_plantations2.csv")
nodes <- data.frame(
name=c(as.character(links$source),
as.character(links$target)) %>% unique()
)
nodes <- data.frame(
name=c(as.character(links$source),
as.character(links$target)) %>% unique()
)
links$IDsource <- match(links$source, nodes$name)-1
links$IDtarget <- match(links$target, nodes$name)-1
# Make the Network
p <- sankeyNetwork(Links = links,
Nodes = nodes,
Source = "IDsource",
Target = "IDtarget",
Value = "value",
NodeID = "name",
sinksRight=FALSE,
fontSize = 14)
p
library(chorddiag)
library(igraph)
library(readr)
library(tidygraph)
# read in data
bps2evt2 <- read_csv("bps2evt2.csv")
#convert to matrix
bps2evtMatrix<-as.matrix(as_adjacency_matrix(as_tbl_graph(bps2evt2),attr = "acres"))
#clean up matrix (could be cleaner!)
bps2evtMatrix = subset(bps2evtMatrix, select = -c(1,2,3,4,5,6))
bps2evtMatrix2 <- bps2evtMatrix[-c(7,8,9,10,11,12),]
#make a custom color pallet
groupColors <- c("#F26223", "#6c9174", "#957244", "#F26223", "#204a3e", "#97abad")
#make chord diagram
chord<-chorddiag(data = bps2evtMatrix2,
type = "bipartite",
groupColors = groupColors,
groupnamePadding = 10,
groupPadding = 3,
groupnameFontsize = 10 ,
showTicks = FALSE,
margin=150,
tooltipGroupConnector = "    &#x25B6;    ",
chordedgeColor = "#B3B6B7"
)
chord
library(networkD3)
library(dplyr)
sizingPolicy(viewer.suppress = TRUE,
knitr.figure = FALSE,
browser.fill = TRUE,
browser.padding = 75,
knitr.defaultWidth = 800,
knitr.defaultHeight = 500)
links <- read_csv("mh_plantations2.csv")
nodes <- data.frame(
name=c(as.character(links$source),
as.character(links$target)) %>% unique()
)
nodes <- data.frame(
name=c(as.character(links$source),
as.character(links$target)) %>% unique()
)
links$IDsource <- match(links$source, nodes$name)-1
links$IDtarget <- match(links$target, nodes$name)-1
# Make the Network
p <- sankeyNetwork(Links = links,
Nodes = nodes,
Source = "IDsource",
Target = "IDtarget",
Value = "value",
NodeID = "name",
sinksRight=FALSE,
fontSize = 14)
p
# Chord Diagram
library(chorddiag)
library(igraph)
library(readr)
library(tidygraph)
# read in data
bps2evt2 <- read_csv("bps2evt2.csv")
#convert to matrix
bps2evtMatrix<-as.matrix(as_adjacency_matrix(as_tbl_graph(bps2evt2),attr = "acres"))
#clean up matrix (could be cleaner!)
bps2evtMatrix = subset(bps2evtMatrix, select = -c(1,2,3,4,5,6))
bps2evtMatrix2 <- bps2evtMatrix[-c(7,8,9,10,11,12),]
#make a custom color pallet
groupColors <- c("#F26223", "#6c9174", "#957244", "#F26223", "#204a3e", "#97abad")
#make chord diagram
chord<-chorddiag(data = bps2evtMatrix2,
type = "bipartite",
groupColors = groupColors,
groupnamePadding = 10,
groupPadding = 3,
groupnameFontsize = 10 ,
showTicks = FALSE,
margin=150,
tooltipGroupConnector = "    &#x25B6;    ",
chordedgeColor = "#B3B6B7"
)
chord
ecozone2bps <- read_csv("ecozone2bps.csv")
ecozone2bpsMatrix<-as.matrix(as_adjacency_matrix(as_tbl_graph(ecozone2bps),attr = "Acres"))
ecozone2bpsMatrix = subset(ecozone2bpsMatrix, select = -c(1:17))
ecozone2bpsMatrix <- ecozone2bpsMatrix[-c(24:33),]
library(chorddiag)
chord<-chorddiag(data = ecozone2bpsMatrix,
type = "bipartite",
groupnamePadding = 10,
groupPadding = 3,
groupColors = c("#ffffe5","#fff7bc","#fee391","#fec44f","#fe9929","#32784f","#cc4c02","#8c2d04", "#32784f"),
groupnameFontsize = 10,
showTicks = FALSE,
margin=250,
tooltipGroupConnector = "    &#x25B6;    ",
chordedgeColor = "#B3B6B7"
)
chord
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(tidyverse)
library(ggplot2)
library(plotly)
library(dplyr)
library(scales)
library(knitr)
library(ggthemr)
library(chorddiag)
library(igraph)
library(tidygraph)
opts_knit$set(eval.after = 'fig.cap')
options(scipen=999)
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(tidyverse)
library(ggplot2)
library(plotly)
library(dplyr)
library(scales)
library(knitr)
library(ggthemr)
library(chorddiag)
library(igraph)
library(tidygraph)
ggplot(diamonds, aes(cut, price)) + geom_boxplot()
ecozone2bps <- read_csv("ecozone2bps.csv")
ecozone2bpsMatrix<-as.matrix(as_adjacency_matrix(as_tbl_graph(ecozone2bps),attr = "Acres"))
ecozone2bpsMatrix = subset(ecozone2bpsMatrix, select = -c(1:17))
ecozone2bpsMatrix <- ecozone2bpsMatrix[-c(24:33),]
library(chorddiag)
chord<-chorddiag(data = ecozone2bpsMatrix,
type = "bipartite",
groupnamePadding = 10,
groupPadding = 3,
groupColors = c("#ffffe5","#fff7bc","#fee391","#fec44f","#fe9929","#32784f","#cc4c02","#8c2d04", "#32784f"),
groupnameFontsize = 10,
showTicks = FALSE,
margin=250,
tooltipGroupConnector = "    &#x25B6;    ",
chordedgeColor = "#B3B6B7"
)
chord
ecozone2bps <- read_csv("ecozone2bps.csv")
ecozone2bpsMatrix<-as.matrix(as_adjacency_matrix(as_tbl_graph(ecozone2bps),attr = "Acres"))
ecozone2bpsMatrix = subset(ecozone2bpsMatrix, select = -c(1:17))
ecozone2bpsMatrix <- ecozone2bpsMatrix[-c(24:33),]
library(chorddiag)
chord<-chorddiag(data = ecozone2bpsMatrix,
type = "bipartite",
groupnamePadding = 10,
groupPadding = 3,
groupColors = c("#ffffe5","#fff7bc","#fee391","#fec44f","#fe9929","#32784f","#cc4c02","#8c2d04", "#32784f"),
groupnameFontsize = 10,
showTicks = FALSE,
margin=250,
tooltipGroupConnector = "    &#x25B6;    ",
chordedgeColor = "#B3B6B7"
)
chord
library(networkD3)
library(dplyr)
sizingPolicy(viewer.suppress = TRUE,
knitr.figure = FALSE,
browser.fill = TRUE,
browser.padding = 75,
knitr.defaultWidth = 800,
knitr.defaultHeight = 500)
links <- read_csv("mh_plantations2.csv")
nodes <- data.frame(
name=c(as.character(links$source),
as.character(links$target)) %>% unique()
)
nodes <- data.frame(
name=c(as.character(links$source),
as.character(links$target)) %>% unique()
)
links$IDsource <- match(links$source, nodes$name)-1
links$IDtarget <- match(links$target, nodes$name)-1
# Make the Network
p <- sankeyNetwork(Links = links,
Nodes = nodes,
Source = "IDsource",
Target = "IDtarget",
Value = "value",
NodeID = "name",
sinksRight=FALSE,
fontSize = 14)
p
library(networkD3)
library(dplyr)
sizingPolicy(viewer.suppress = TRUE,
knitr.figure = FALSE,
browser.fill = TRUE,
browser.padding = 75,
knitr.defaultWidth = 800,
knitr.defaultHeight = 500)
links <- read_csv("mh_plantations2.csv")
nodes <- data.frame(
name=c(as.character(links$source),
as.character(links$target)) %>% unique()
)
nodes <- data.frame(
name=c(as.character(links$source),
as.character(links$target)) %>% unique()
)
links$IDsource <- match(links$source, nodes$name)-1
links$IDtarget <- match(links$target, nodes$name)-1
# Make the Network
p <- sankeyNetwork(Links = links,
Nodes = nodes,
Source = "IDsource",
Target = "IDtarget",
Value = "value",
NodeID = "name",
sinksRight=FALSE,
fontSize = 14)
p
links <- read_csv("mh_plantations2.csv")
nodes <- data.frame(
name=c(as.character(links$source),
as.character(links$target)) %>% unique()
)
nodes <- data.frame(
name=c(as.character(links$source),
as.character(links$target)) %>% unique()
)
links$IDsource <- match(links$source, nodes$name)-1
links$IDtarget <- match(links$target, nodes$name)-1
# Make the Network
p <- sankeyNetwork(Links = links,
Nodes = nodes,
Source = "IDsource",
Target = "IDtarget",
Value = "value",
NodeID = "name",
sinksRight=FALSE,
fontSize = 14)
p
links <- read_csv("mh_plantations2.csv")
nodes <- data.frame(
name=c(as.character(links$source),
as.character(links$target)) %>% unique()
)
nodes <- data.frame(
name=c(as.character(links$source),
as.character(links$target)) %>% unique()
)
links$IDsource <- match(links$source, nodes$name)-1
links$IDtarget <- match(links$target, nodes$name)-1
# Make the Network
p <- sankeyNetwork(Links = links,
Nodes = nodes,
Source = "IDsource",
Target = "IDtarget",
Value = "value",
NodeID = "name",
sinksRight=FALSE,
fontSize = 14)
p
bps2evt <- read_csv("bps2evt4SB.csv")
SBBpstoEvt <- sunburst(bps2evt, legend=FALSE, width="100%", colors = list(range = RColorBrewer::brewer.pal(8, "PRGn")))
SBBpstoEvt
