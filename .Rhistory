top15 <- ggplotly(top15)
top15
## read in data
BpSForGraphs <- read_csv("BpSForGraphs.csv",
col_types = cols(X1 = col_skip(), X1_1 = col_skip(),
X1_2 = col_skip(), X1_3 = col_skip(),
X1_4 = col_skip(), X1_5 = col_skip()))
## Laura says to chop the data:
bps_chop <- BpSForGraphs[c(1:15),]
## Now make Laura's colorful chart
top15 <- ggplot(bps_chop, aes(x = reorder(BPS_NAME, ACRES), y = ACRES, fill = BPS_NAME)) +
coord_flip() +
scale_y_continuous(labels=comma) +
geom_col() +
scale_fill_brewer(palette="Set1") +
labs(title="Forested Ecosystems of Michigan-Historical Amounts", y="Acres", x="") +
theme(legend.position="none",
plot.title = element_text(hjust = 0.5),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
top15 <- ggplotly(top15)
top15
## read in data
BpSForGraphs <- read_csv("BpSForGraphs.csv",
col_types = cols(X1 = col_skip(), X1_1 = col_skip(),
X1_2 = col_skip(), X1_3 = col_skip(),
X1_4 = col_skip(), X1_5 = col_skip()))
## Laura says to chop the data:
bps_chop <- BpSForGraphs[c(1:15),]
## Now make Laura's colorful chart
top15 <- ggplot(bps_chop, aes(x = reorder(BPS_NAME, ACRES), y = ACRES, fill = BPS_NAME)) +
coord_flip() +
scale_y_continuous(labels=comma) +
geom_col() +
scale_fill_brewer(palette="PRGn") +
labs(title="Forested Ecosystems of Michigan-Historical Amounts", y="Acres", x="") +
theme(legend.position="none",
plot.title = element_text(hjust = 0.5),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
top15 <- ggplotly(top15)
top15
## read in data
BpSForGraphs <- read_csv("BpSForGraphs.csv",
col_types = cols(X1 = col_skip(), X1_1 = col_skip(),
X1_2 = col_skip(), X1_3 = col_skip(),
X1_4 = col_skip(), X1_5 = col_skip()))
## Laura says to chop the data:
bps_chop <- BpSForGraphs[c(1:15),]
## Now make Laura's colorful chart
top15 <- ggplot(bps_chop, aes(x = reorder(BPS_NAME, ACRES), y = ACRES, fill = BPS_NAME)) +
coord_flip() +
scale_y_continuous(labels=comma) +
geom_col() +
scale_fill_brewer(palette="Paired") +
labs(title="Forested Ecosystems of Michigan-Historical Amounts", y="Acres", x="") +
theme(legend.position="none",
plot.title = element_text(hjust = 0.5),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
top15 <- ggplotly(top15)
top15
## read in data
BpSForGraphs <- read_csv("BpSForGraphs.csv",
col_types = cols(X1 = col_skip(), X1_1 = col_skip(),
X1_2 = col_skip(), X1_3 = col_skip(),
X1_4 = col_skip(), X1_5 = col_skip()))
## Laura says to chop the data:
bps_chop <- BpSForGraphs[c(1:15),]
## color pallete
colourCount = length(unique(bps_chop$BPS_NAME))
getPalette = colorRampPalette(brewer.pal(9, "Set1"))
## Now make Laura's colorful chart
top15 <- ggplot(bps_chop, aes(x = reorder(BPS_NAME, ACRES), y = ACRES, fill = BPS_NAME)) +
coord_flip() +
scale_y_continuous(labels=comma) +
geom_col() +
fill=getPalette(colourCount)) +
labs(title="Forested Ecosystems of Michigan-Historical Amounts", y="Acres", x="") +
theme(legend.position="none",
plot.title = element_text(hjust = 0.5),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
top15 <- ggplotly(top15)
top15
## read in data
BpSForGraphs <- read_csv("BpSForGraphs.csv",
col_types = cols(X1 = col_skip(), X1_1 = col_skip(),
X1_2 = col_skip(), X1_3 = col_skip(),
X1_4 = col_skip(), X1_5 = col_skip()))
## Laura says to chop the data:
bps_chop <- BpSForGraphs[c(1:15),]
## color pallete
colourCount = length(unique(bps_chop$BPS_NAME))
getPalette = colorRampPalette(brewer.pal(9, "PRgn"))
## Now make Laura's colorful chart
top15 <- ggplot(bps_chop, aes(x = reorder(BPS_NAME, ACRES), y = ACRES, fill = BPS_NAME)) +
coord_flip() +
scale_y_continuous(labels=comma) +
geom_col() +
fill=getPalette(colourCount)) +
labs(title="Forested Ecosystems of Michigan-Historical Amounts", y="Acres", x="") +
theme(legend.position="none",
plot.title = element_text(hjust = 0.5),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
top15 <- ggplotly(top15)
top15
## read in data
BpSForGraphs <- read_csv("BpSForGraphs.csv",
col_types = cols(X1 = col_skip(), X1_1 = col_skip(),
X1_2 = col_skip(), X1_3 = col_skip(),
X1_4 = col_skip(), X1_5 = col_skip()))
## Laura says to chop the data:
bps_chop <- BpSForGraphs[c(1:15),]
## color pallete
colourCount = length(unique(bps_chop$BPS_NAME))
getPalette = colorRampPalette(brewer.pal(9, "PRgn"))
## Now make Laura's colorful chart
top15 <- ggplot(bps_chop, aes(x = reorder(BPS_NAME, ACRES), y = ACRES, fill = BPS_NAME)) +
coord_flip() +
scale_y_continuous(labels=comma) +
geom_col() +
fill=getPalette(colourCount) +
labs(title="Forested Ecosystems of Michigan-Historical Amounts", y="Acres", x="") +
theme(legend.position="none",
plot.title = element_text(hjust = 0.5),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
top15 <- ggplotly(top15)
top15
## read in data
BpSForGraphs <- read_csv("BpSForGraphs.csv",
col_types = cols(X1 = col_skip(), X1_1 = col_skip(),
X1_2 = col_skip(), X1_3 = col_skip(),
X1_4 = col_skip(), X1_5 = col_skip()))
## Laura says to chop the data:
bps_chop <- BpSForGraphs[c(1:15),]
## color pallete
colourCount = length(unique(bps_chop$BPS_NAME))
getPalette = colorRampPalette(brewer.pal(9, "PRgn"))
## Now make Laura's colorful chart
top15 <- ggplot(bps_chop, aes(x = reorder(BPS_NAME, ACRES), y = ACRES, fill = BPS_NAME)) +
coord_flip() +
scale_y_continuous(labels=comma) +
geom_col() +
scale_fill_manual(values = colorRampPalette(brewer.pal(12,                                                                  "Accent"))(colourCount))  +
labs(title="Forested Ecosystems of Michigan-Historical Amounts", y="Acres", x="") +
theme(legend.position="none",
plot.title = element_text(hjust = 0.5),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
top15 <- ggplotly(top15)
top15
## read in data
BpSForGraphs <- read_csv("BpSForGraphs.csv",
col_types = cols(X1 = col_skip(), X1_1 = col_skip(),
X1_2 = col_skip(), X1_3 = col_skip(),
X1_4 = col_skip(), X1_5 = col_skip()))
## Laura says to chop the data:
bps_chop <- BpSForGraphs[c(1:15),]
## color pallete
colourCount <- length(unique(bps_chop$BPS_NAME))
getPalette <- colorRampPalette(brewer.pal(9, "PRgn"))
## Now make Laura's colorful chart
top15 <- ggplot(bps_chop, aes(x = reorder(BPS_NAME, ACRES), y = ACRES, fill = BPS_NAME)) +
coord_flip() +
scale_y_continuous(labels=comma) +
geom_col() +
scale_fill_manual(values = colorRampPalette(brewer.pal(12,                                                                  "Accent"))(colourCount))  +
labs(title="Forested Ecosystems of Michigan-Historical Amounts", y="Acres", x="") +
theme(legend.position="none",
plot.title = element_text(hjust = 0.5),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
top15 <- ggplotly(top15)
top15
library(flexdashboard)
library(readr)
library(ggplot2)
library(dplyr)
library(scales)
library(DT)
library(plotly)
library(RColorBrewer)
library(colorRamps)
install.packages("colorRamps")
library(flexdashboard)
library(readr)
library(ggplot2)
library(dplyr)
library(scales)
library(DT)
library(plotly)
library(RColorBrewer)
library(colorRamps)
## read in data
BpSForGraphs <- read_csv("BpSForGraphs.csv",
col_types = cols(X1 = col_skip(), X1_1 = col_skip(),
X1_2 = col_skip(), X1_3 = col_skip(),
X1_4 = col_skip(), X1_5 = col_skip()))
## Laura says to chop the data:
bps_chop <- BpSForGraphs[c(1:15),]
## color pallete
colourCount <- length(unique(bps_chop$BPS_NAME))
getPalette <- colorRampPalette(brewer.pal(9, "PRgn"))
## Now make Laura's colorful chart
top15 <- ggplot(bps_chop, aes(x = reorder(BPS_NAME, ACRES), y = ACRES, fill = BPS_NAME)) +
coord_flip() +
scale_y_continuous(labels=comma) +
geom_col() +
scale_fill_manual(values = colorRampPalette(brewer.pal(12,                                                                  "Accent"))(colourCount))  +
labs(title="Forested Ecosystems of Michigan-Historical Amounts", y="Acres", x="") +
theme(legend.position="none",
plot.title = element_text(hjust = 0.5),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
top15 <- ggplotly(top15)
top15
## read in data
BpSForGraphs <- read_csv("BpSForGraphs.csv",
col_types = cols(X1 = col_skip(), X1_1 = col_skip(),
X1_2 = col_skip(), X1_3 = col_skip(),
X1_4 = col_skip(), X1_5 = col_skip()))
## Laura says to chop the data:
bps_chop <- BpSForGraphs[c(1:15),]
## color pallete
colourCount <- length(unique(bps_chop$BPS_NAME))
getPalette <- colorRampPalette(brewer.pal(9, "PRGn"))
## Now make Laura's colorful chart
top15 <- ggplot(bps_chop, aes(x = reorder(BPS_NAME, ACRES), y = ACRES, fill = BPS_NAME)) +
coord_flip() +
scale_y_continuous(labels=comma) +
geom_col() +
scale_fill_manual(values = colorRampPalette(brewer.pal(12,                                                                  "Accent"))(colourCount))  +
labs(title="Forested Ecosystems of Michigan-Historical Amounts", y="Acres", x="") +
theme(legend.position="none",
plot.title = element_text(hjust = 0.5),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
top15 <- ggplotly(top15)
top15
knitr::include_graphics("mi_vdep.jpg")
knitr::include_graphics("mi_vdep.jpg")
EVT_NatForGraphs <- read_csv("EVT_NatForGraphs.csv")
EVTnatArranged <- arrange(EVT_NatForGraphs, desc(ACRES))
colourCount <- length(unique(bps_chop$BPS_NAME))
getPalette <- colorRampPalette(brewer.pal(9, "PRGn"))
top15EVTs <-
ggplot(EVTnatArranged, aes(x = reorder(EVT_NAME, ACRES), y = ACRES)) + ###
geom_bar(stat = "identity", fill = "grey") +
coord_flip() +
scale_fill_manual(values = colorRampPalette(brewer.pal(12,                                                                  "Accent"))(colourCount))  +
ggtitle("Most Widespread Forest Ecosystems (2014)") +
labs(x = "", y = "Acres") +
scale_y_continuous(labels = comma) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
top15EVTs <- ggplotly(top15EVTs)
top15EVTs
EVT_NatForGraphs <- read_csv("EVT_NatForGraphs.csv")
EVTnatArranged <- arrange(EVT_NatForGraphs, desc(ACRES))
colourCount <- length(unique(bps_chop$BPS_NAME))
getPalette <- colorRampPalette(brewer.pal(9, "PRGn"))
top15EVTs <-
ggplot(EVTnatArranged, aes(x = reorder(EVT_NAME, ACRES), y = ACRES)) + ###
geom_bar(stat = "identity") +
coord_flip() +
scale_fill_manual(values = colorRampPalette(brewer.pal(12,                                                                  "Accent"))(colourCount))  +
ggtitle("Most Widespread Forest Ecosystems (2014)") +
labs(x = "", y = "Acres") +
scale_y_continuous(labels = comma) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
top15EVTs <- ggplotly(top15EVTs)
top15EVTs
EVT_NatForGraphs <- read_csv("EVT_NatForGraphs.csv")
EVTnatArranged <- arrange(EVT_NatForGraphs, desc(ACRES))
colourCount <- length(unique(bps_chop$BPS_NAME))
getPalette <- colorRampPalette(brewer.pal(9, "PRGn"))
top15EVTs <-
ggplot(EVTnatArranged, aes(x = reorder(EVT_NAME, ACRES), y = ACRES)) + ###
geom_bar(stat = "identity") +
coord_flip() +
scale_y_continuous(labels=comma) +
geom_col() +
scale_fill_manual(values = colorRampPalette(brewer.pal(12,                                                                  "Accent"))(colourCount))  +
labs(title="Forested Ecosystems of Michigan-Historical Amounts", y="Acres", x="") +
theme(legend.position="none",
plot.title = element_text(hjust = 0.5),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
top15EVTs <- ggplotly(top15EVTs)
top15EVTs
EVT_NatForGraphs <- read_csv("EVT_NatForGraphs.csv")
EVTnatArranged <- arrange(EVT_NatForGraphs, desc(ACRES))
colourCount <- length(unique(bps_chop$BPS_NAME))
getPalette <- colorRampPalette(brewer.pal(9, "PRGn"))
top15EVTs <-
ggplot(EVTnatArranged, aes(x = reorder(EVT_NAME, ACRES), y = ACRES)) + ###
geom_col(stat = "identity") +
coord_flip() +
scale_y_continuous(labels=comma) +
geom_col() +
scale_fill_manual(values = colorRampPalette(brewer.pal(12,                                                                  "Accent"))(colourCount))  +
labs(title="Forested Ecosystems of Michigan-Historical Amounts", y="Acres", x="") +
theme(legend.position="none",
plot.title = element_text(hjust = 0.5),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
top15EVTs <- ggplotly(top15EVTs)
top15EVTs
EVT_NatForGraphs <- read_csv("EVT_NatForGraphs.csv")
EVTnatArranged <- arrange(EVT_NatForGraphs, desc(ACRES))
colourCount <- length(unique(EVTnatArranged$EVT_NAME))
getPalette <- colorRampPalette(brewer.pal(9, "PRGn"))
top15EVTs <-
ggplot(EVTnatArranged, aes(x = reorder(EVT_NAME, ACRES), y = ACRES)) + ###
geom_col(stat = "identity") +
coord_flip() +
scale_y_continuous(labels=comma) +
geom_col() +
scale_fill_manual(values = colorRampPalette(brewer.pal(12,                                                                  "Accent"))(colourCount))  +
labs(title="Forested Ecosystems of Michigan-Historical Amounts", y="Acres", x="") +
theme(legend.position="none",
plot.title = element_text(hjust = 0.5),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
top15EVTs <- ggplotly(top15EVTs)
top15EVTs
EVT_NatForGraphs <- read_csv("EVT_NatForGraphs.csv")
EVTnatArranged <- arrange(EVT_NatForGraphs, desc(ACRES))
colourCount <- length(unique(EVTnatArranged$EVT_NAME))
getPalette <- colorRampPalette(brewer.pal(9, "PRGn"))
top15EVTs <-
ggplot(EVTnatArranged, aes(x = reorder(EVT_NAME, ACRES), y = ACRES)) + ###
geom_col() +
coord_flip() +
scale_y_continuous(labels=comma) +
geom_col() +
scale_fill_manual(values = colorRampPalette(brewer.pal(12,                                                                  "Accent"))(colourCount))  +
labs(title="Forested Ecosystems of Michigan-Historical Amounts", y="Acres", x="") +
theme(legend.position="none",
plot.title = element_text(hjust = 0.5),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
top15EVTs <- ggplotly(top15EVTs)
top15EVTs
EVT_NatForGraphs <- read_csv("EVT_NatForGraphs.csv")
EVTnatArranged <- arrange(EVT_NatForGraphs, desc(ACRES))
colourCount <- length(unique(EVTnatArranged$EVT_NAME))
getPalette <- colorRampPalette(brewer.pal(9, "PRGn"))
top15EVTs <-
ggplot(EVTnatArranged, aes(x = reorder(EVT_NAME, ACRES), y = ACRES)) + ###
geom_col() +
coord_flip() +
scale_y_continuous(labels=comma) +
scale_fill_manual(values = colorRampPalette(brewer.pal(12,                                                                  "Accent"))(colourCount))  +
labs(title="Forested Ecosystems of Michigan-Historical Amounts", y="Acres", x="") +
theme(legend.position="none",
plot.title = element_text(hjust = 0.5),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
top15EVTs <- ggplotly(top15EVTs)
top15EVTs
## read in data
BpSForGraphs <- read_csv("BpSForGraphs.csv",
col_types = cols(X1 = col_skip(), X1_1 = col_skip(),
X1_2 = col_skip(), X1_3 = col_skip(),
X1_4 = col_skip(), X1_5 = col_skip()))
## Laura says to chop the data:
bps_chop <- BpSForGraphs[c(1:15),]
## color pallete
colourCount <- length(unique(bps_chop$BPS_NAME))
getPalette <- colorRampPalette(brewer.pal(9, "PRGn"))
## Now make Laura's colorful chart
top15bps <- ggplot(bps_chop, aes(x = reorder(BPS_NAME, ACRES), y = ACRES, fill = BPS_NAME)) +
coord_flip() +
scale_y_continuous(labels=comma) +
geom_col() +
scale_fill_manual(values = colorRampPalette(brewer.pal(12,                                                                  "Accent"))(colourCount))  +
labs(title="Forested Ecosystems of Michigan-Historical Amounts", y="Acres", x="") +
theme(legend.position="none",
plot.title = element_text(hjust = 0.5),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
top15bps <- ggplotly(top15bps)
top15bps
EVT_NatForGraphs <- read_csv("EVT_NatForGraphs.csv")
EVTnatArranged <- arrange(EVT_NatForGraphs, desc(ACRES))
colourCount2 <- length(unique(EVTnatArranged$EVT_NAME))
getPalette2 <- colorRampPalette(brewer.pal(9, "PRGn"))
top15EVTs <-
ggplot(EVTnatArranged, aes(x = reorder(EVT_NAME, ACRES), y = ACRES)) + ###
geom_col() +
coord_flip() +
scale_y_continuous(labels=comma) +
scale_fill_manual(values = colorRampPalette(brewer.pal(12,                                                                  "Accent"))(colourCount2))  +
labs(title="Forested Ecosystems of Michigan-Historical Amounts", y="Acres", x="") +
theme(legend.position="none",
plot.title = element_text(hjust = 0.5),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
top15EVTs <- ggplotly(top15EVTs)
top15EVTs
EVT_NatForGraphs <- read_csv("EVT_NatForGraphs.csv")
EVTnatArranged <- arrange(EVT_NatForGraphs, desc(ACRES))
evt_chop <- EVTnatArranged[c(1:15),]
View(evt_chop)
View(evt_chop)
colourCount2 <- length(unique(evt_chop$EVT_NAME))
getPalette2 <- colorRampPalette(brewer.pal(9, "PRGn"))
top15EVTs <-
ggplot(evt_chop, aes(x = reorder(EVT_NAME, ACRES), y = ACRES)) + ###
geom_col() +
coord_flip() +
scale_y_continuous(labels=comma) +
scale_fill_manual(values = colorRampPalette(brewer.pal(12,                                                                  "Accent"))(colourCount2))  +
labs(title="Forested Ecosystems of Michigan-Historical Amounts", y="Acres", x="") +
theme(legend.position="none",
plot.title = element_text(hjust = 0.5),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
top15EVTs <- ggplotly(top15EVTs)
top15EVTs
colourCount2 <- length(unique(evt_chop$EVT_NAME))
getPalette2 <- colorRampPalette(brewer.pal(12, "PRGn"))
top15EVTs <-
ggplot(evt_chop, aes(x = reorder(EVT_NAME, ACRES), y = ACRES)) + ###
geom_col() +
coord_flip() +
scale_y_continuous(labels=comma) +
scale_fill_manual(values = colorRampPalette(brewer.pal(15,                                                                  "Accent"))(colourCount2))  +
labs(title="Forested Ecosystems of Michigan-Historical Amounts", y="Acres", x="") +
theme(legend.position="none",
plot.title = element_text(hjust = 0.5),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
top15EVTs <- ggplotly(top15EVTs)
top15EVTs
library(flexdashboard)
library(readr)
library(ggplot2)
library(dplyr)
library(scales)
library(DT)
library(plotly)
library(RColorBrewer)
library(colorRamps)
colourCount2 <- length(unique(evt_chop$EVT_NAME))
getPalette2 <- colorRampPalette(brewer.pal(12, "PRGn"))
top15EVTs <-
ggplot(evt_chop, aes(x = reorder(EVT_NAME, ACRES), y = ACRES)) + ###
geom_col() +
coord_flip() +
scale_y_continuous(labels=comma) +
scale_fill_manual(values = colorRampPalette(brewer.pal(15,                                                                  "Accent"))(colourCount2))  +
labs(title="Forested Ecosystems of Michigan-Historical Amounts", y="Acres", x="") +
theme(legend.position="none",
plot.title = element_text(hjust = 0.5),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
top15EVTs <- ggplotly(top15EVTs)
top15EVTs
colourCount2 <- length(unique(evt_chop$EVT_NAME))
getPalette2 <- colorRampPalette(brewer.pal(12, "PRGn"))
top15EVTs <-
ggplot(evt_chop, aes(x = reorder(EVT_NAME, ACRES), y = ACRES, fill = EVT_NAME)) + ###
geom_col() +
coord_flip() +
scale_y_continuous(labels=comma) +
scale_fill_manual(values = colorRampPalette(brewer.pal(15,                                                                  "Accent"))(colourCount2))  +
labs(title="Forested Ecosystems of Michigan-Historical Amounts", y="Acres", x="") +
theme(legend.position="none",
plot.title = element_text(hjust = 0.5),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
top15EVTs <- ggplotly(top15EVTs)
top15EVTs
colourCount2 <- length(unique(evt_chop$EVT_NAME))
getPalette2 <- colorRampPalette(brewer.pal(9, "PRGn"))
top15EVTs <-
ggplot(evt_chop, aes(x = reorder(EVT_NAME, ACRES), y = ACRES, fill = EVT_NAME)) + ###
geom_col() +
coord_flip() +
scale_y_continuous(labels=comma) +
scale_fill_manual(values = colorRampPalette(brewer.pal(12,                                                                  "Accent"))(colourCount2))  +
labs(title="Forested Ecosystems of Michigan-Historical Amounts", y="Acres", x="") +
theme(legend.position="none",
plot.title = element_text(hjust = 0.5),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
top15EVTs <- ggplotly(top15EVTs)
top15EVTs
bps2evt <- read_csv("bps2evt4SB.csv")
SBBpstoEvt <- sunburst(bps2evt, legend=FALSE, width="100%", colors = list(range = RColorBrewer::brewer.pal(11, "BrBG")))
SBBpstoEvt
library(flexdashboard)
library(readr)
library(ggplot2)
library(dplyr)
library(scales)
library(DT)
library(plotly)
library(RColorBrewer)
library(colorRamps)
library(treemap)
library(tidyverse)
library(sunburstR)
bps2evt <- read_csv("bps2evt4SB.csv")
SBBpstoEvt <- sunburst(bps2evt, legend=FALSE, width="100%", colors = list(range = RColorBrewer::brewer.pal(11, "BrBG")))
SBBpstoEvt
