install.packages("flexdashboard")
install.packages("highcharter")
install.packages("colorRamps")
install.packages("colorRamps")
library(flexdashboard)
library(readr)
library(ggplot2)
library(dplyr)
library(scales)
library(DT)
library(plotly)
library(RColorBrewer)
library(colorRamps)
library(treemap)
library(tidyverse)
library(sunburstR)
library(igraph)
library(chorddiag)
library(tidygraph)
bps2evt2 <- read_csv("bps2evt2.csv")
bps2evtMatrix<-as.matrix(as_adjacency_matrix(as_tbl_graph(bps2evt2),attr = "acres"))
bps2evtMatrix = subset(bps2evtMatrix, select = -c(1,2,3,4,5,6))
bps2evtMatrix2 <- bps2evtMatrix[-c(7,8,9,10,11,12),]
groupColors <- c("#F26223", "#6c9174", "#957244", "#F26223", "#204a3e", "#97abad")
chord<-chorddiag(data = bps2evtMatrix2,
type = "bipartite",
groupColors = groupColors,
groupnamePadding = 10,
groupPadding = 3,
groupnameFontsize = 10 ,
showTicks = FALSE,
margin=150,
tooltipGroupConnector = "    &#x25B6;    ",
chordedgeColor = "#B3B6B7"
)
chord
bps2evt2 <- read_csv("bps2evt2.csv")
bps2evtMatrix<-as.matrix(as_adjacency_matrix(as_tbl_graph(bps2evt2),attr = "acres"))
bps2evtMatrix = subset(bps2evtMatrix, select = -c(1,2,3,4,5,6))
bps2evtMatrix2 <- bps2evtMatrix[-c(7,8,9,10,11,12),]
groupColors <- c("#F26223", "#6c9174", "#957244", "#F26223", "#204a3e", "#97abad")
chord<-chorddiag(data = bps2evtMatrix2,
type = "bipartite",
groupColors = groupColors,
groupnamePadding = 10,
groupPadding = 3,
groupnameFontsize = 10 ,
showTicks = FALSE,
margin=100,
tooltipGroupConnector = "    &#x25B6;    ",
chordedgeColor = "#B3B6B7"
)
chord
library(flexdashboard)
library(readr)
library(ggplot2)
library(dplyr)
library(scales)
library(DT)
library(plotly)
library(RColorBrewer)
library(colorRamps)
library(treemap)
library(tidyverse)
library(sunburstR)
library(igraph)
library(chorddiag)
library(tidygraph)
## read in data
BpSForGraphs <- read_csv("BpSForGraphs.csv",
col_types = cols(X1 = col_skip(), X1_1 = col_skip(),
X1_2 = col_skip(), X1_3 = col_skip(),
X1_4 = col_skip(), X1_5 = col_skip()))
## Laura says to chop the data:
bps_chop <- BpSForGraphs[c(1:15),]
## color pallete
colourCount <- length(unique(bps_chop$BPS_NAME))
getPalette <- colorRampPalette(brewer.pal(9, "PRGn"))
## Now make Laura's colorful chart
top15bps <- ggplot(bps_chop, aes(x = reorder(BPS_NAME, ACRES), y = ACRES, fill = BPS_NAME)) +
coord_flip() +
scale_y_continuous(labels=comma) +
geom_col() +
scale_fill_manual(values = colorRampPalette(brewer.pal(12,                                                                  "Accent"))(colourCount))  +
labs(title="Forested Ecosystems of Michigan-Historical Amounts", y="Acres", x="") +
theme(legend.position="none",
plot.title = element_text(hjust = 0.5),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
top15bps <- ggplotly(top15bps)
top15bps
install.packages("networkD3")
library(networkD3)
library(dplyr)
sizingPolicy(viewer.suppress = TRUE,
knitr.figure = FALSE,
browser.fill = TRUE,
browser.padding = 75,
knitr.defaultWidth = 800,
knitr.defaultHeight = 500)
links <- read_csv("mh_plantations2.csv")
nodes <- data.frame(
name=c(as.character(links$source),
as.character(links$target)) %>% unique()
)
nodes <- data.frame(
name=c(as.character(links$source),
as.character(links$target)) %>% unique()
)
links$IDsource <- match(links$source, nodes$name)-1
links$IDtarget <- match(links$target, nodes$name)-1
# Make the Network
p <- sankeyNetwork(Links = links,
Nodes = nodes,
Source = "IDsource",
Target = "IDtarget",
Value = "value",
NodeID = "name",
sinksRight=FALSE,
fontSize = 14)
p
library(networkD3)
library(dplyr)
links <- read_csv("mh_plantations2.csv")
library(readr)
sizingPolicy(viewer.suppress = TRUE,
knitr.figure = FALSE,
browser.fill = TRUE,
browser.padding = 75,
knitr.defaultWidth = 800,
knitr.defaultHeight = 500)
links <- read_csv("mh_plantations2.csv")
nodes <- data.frame(
name=c(as.character(links$source),
as.character(links$target)) %>% unique()
)
View(links)
View(links)
nodes <- data.frame(
name=c(as.character(links$source),
as.character(links$target)) %>% unique()
)
links$IDsource <- match(links$source, nodes$name)-1
links$IDtarget <- match(links$target, nodes$name)-1
# Make the Network
p <- sankeyNetwork(Links = links,
Nodes = nodes,
Source = "IDsource",
Target = "IDtarget",
Value = "value",
NodeID = "name",
sinksRight=FALSE,
fontSize = 14)
p
library(networkD3)
library(dplyr)
library(readr)
links <- read_csv("mh_plantations2.csv")
knitr::opts_chunk$set(echo = TRUE)
library(networkD3)
library(dplyr)
library(readr)
links <- read_csv("mh_plantations2.csv")
